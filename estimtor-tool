import React, { useState } from 'react';
import './App.css';

function App() {
  const [images, setImages] = useState([]);
  const [roomType, setRoomType] = useState('Kitchen');
  const [rfq, setRfq] = useState('');

  const ROOM_ITEMS = {
    "Kitchen": ["Modular cabinets", "Countertop provision", "Appliance provisions", "Lighting", "Storage accessories"],
    "Living Room": ["Seating layout", "TV/media wall", "Coffee table", "Storage", "Lighting"],
    "Bedroom": ["Bed", "Wardrobe", "Bedside units", "Dresser/Study corner", "Lighting"],
    "Kids Room": ["Kids bed", "Wardrobe", "Study desk", "Shelving", "Safety features"],
    "Home Office": ["Desk & chair", "Storage cabinets", "Task lighting", "Cable management", "Soundproofing"]
  };

  const handleFiles = (e) => {
    const files = Array.from(e.target.files).slice(0,3);
    const urls = files.map(file => URL.createObjectURL(file));
    setImages(urls);
  };

  const generateRfq = () => {
    let brief = `REQUEST FOR QUOTATION (RFQ) â€“ ${roomType}\n\nScope of work:\n`;
    ROOM_ITEMS[roomType].forEach((it, i) => brief += `${i+1}. ${it}\n`);

    brief += images.length
      ? `\nDesign intent: Client has selected ${images.length} inspirational images (attached) representing the desired style.\n`
      : "\nDesign intent: Client preference to be refined with designer input.\n";

    brief += `\nRequirements:\n- Provide concept options aligned with references\n- Suggest material palettes (finishes, laminates, stones, paints)\n- Suggest lighting and electrical provisions\n- Provide space planning within indicated room type\n\n`;
    brief += `Note: This RFQ is for sharing with interior designers/contractors to submit proposals and quotations.\n`;

    setRfq(brief);
  };

  return (
    <div className="container">
      <h3>ITOA RFQ Brief Generator</h3>
      <select value={roomType} onChange={e => setRoomType(e.target.value)}>
        {Object.keys(ROOM_ITEMS).map(room => <option key={room}>{room}</option>)}
      </select>

      <input type="file" accept="image/*" multiple onChange={handleFiles} />

      <div className="preview">
        {images.map((src,i) => <img key={i} src={src} alt="" />)}
      </div>

      <button onClick={generateRfq}>Generate RFQ Brief</button>

      {rfq && <pre className="output">{rfq}</pre>}
    </div>
  );
}

export default App;
